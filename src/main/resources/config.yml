language: zh_CN
available-worlds:
  - "World"
bStats: true
status:
  msg:
    - "{0}:"
    - "    &b&l口渴值&f：${format:process-bar;ThirstElement} &b${format:percent;ThirstElement}%"
    - "    效果：{1}"
  cache: 10000
item:
  sync: enable      # 物品同步，依赖于NBT
  serialization:
    nbt:
      ignore-keys:
        - "CustomModelData"
        - "display"
        - "HideFlags"
effect:
  bundle:               # 设定效果捆绑包
    "速度升级":           # 效果捆绑包ID，同时作为效果名字的存在
      type: "增益"
      EffectBundle:             # 效果类型ID/ EffectBundle(效果捆绑包),PotionEffect(药水效果), ThirstElement-NaturalDepletionEffect(操纵口渴元素自然消减值效果)
        a:                      # 任意字符作为键值，键值下面为【效果类型ID】对应的效果所需要的参数
          bundle-id: test2      # 效果类型参数
    "速度升级2":
      type: "增益"
      EffectBundle:
        a:
          bundle-id: test2
    test1:
      type: "增益"
      PotionEffect:
        a:
          potion-type: "SPEED"
          amplifier: 0
        b:
          potion-type: "JUMP"
          amplifier: 1
      ThirstElement-NaturalDepletionEffect:
        a:
          data: -0.9
    test2:
      type: "增益"
      EffectBundle:
        a:
          bundle-id: test1
formatter:
  process-bar:
    fill: '&2o'
    empty: "&4x"
    length: 16

######################################
#
#          玩家设置
#
######################################
player:
  autosave: 600000 # 自动保存玩家数据，单位毫秒
  schedule:     # 玩家数据更新线程
    delay: 40   # 延迟启动时间，单位毫秒
    period: 40  # 更新间隔时间，单位毫秒
  #########################################
  ##           线程池设定
  # 线程池中线程运行方式由 queue 选项决定
  # java.util.concurrent.LinkedBlockingQueue：
  #     当核心线程数量已满且都繁忙时，
  #     将后来任务加入到队列末尾等待核心线程空闲
  # java.util.concurrent.SynchronousQueue:
  #     当核心线程都繁忙时，创建新的线程运行提交的任务，
  #     若总线程数量超过最大线程数量则丢弃任务
  thread-pool:
    update:              # 玩家数据更新线程池
      core-pool-size: 8  # 核心线程数量
      max-pool-size: 8   # 最大线程数量
      keep-alive-time: 0 # 核心线程外的线程在空闲状态下保持存活的时间，单位毫秒
      queue: java.util.concurrent.LinkedBlockingQueue # 线程池所用队列
